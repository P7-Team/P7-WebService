openapi: 3.0.3
info:
  title: P-7 WebService
  description: 'WebService to distribute computations'
  license:
    name: Don't know
    url: localhost
  version: 1.0.0
servers:
- url: can't remember
tags:
- name: batch
  description: A batch containing an executable able to perform the
               desired computations, and a set of inputs that should be computed
- name: task
  description: A task that is ready to be computed

paths:
  /batch:
    post:
      tags:
      - batch
      summary: Add a batch to be computed
      operationId: AddBatch
      requestBody:
        description: Batch object that should be computed
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      responses:
        202:
          description: Batch has been added to queue
          content: {}
        400:
          description: Invalid input
          content: {}
        401:
          description: Not logged in
          content: {}
      x-codegen-request-body-name: body

  /task/ready:
    get:
      tags:
      - task
      summary: Returns a task that is ready to be computed
      operationId: GetReadyTask
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /api/HeartBeat:
    get:
      tags:
      - HeartBeat
      summary: Status message of devices
      operationId: HeartBeat
      responses:
        200:
          description: HeartBeat successfully received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartBeat'
        400:
          description: Incorrect heartbeat type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartBeat'

  /task/complete:
    post:
      tags:
      - task
      summary: Receives a file containing the result of the Task with ID
      operationId: AddResult
      requestBody:
        description: Information about completed Task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletedTask'
      responses:
        201:
          description: Successful creation
        400:
          description: Invalid input
        401:
          description: Not logged in

  /user/signup:
    post:
      tags:
      - user
      summary: Creates a new user with supplied information, if not already existing in the system
      operationId: SignUp
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Successful creation
        422:
          description: Could not create user with given information

  /user/login:
    post:
      tags:
      - user
      summary: Authenticates a user in the system and provides a session token
      operationId: Login
      requestBody:
        description: User login information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        404:
          description: User not found

  /user/logout:
    delete:
      tags:
      - user
      summary: Informing the service that a user is going inactive, destroying the user session
      operationId: Logout
      parameters:
        - in: query
          name: session
          required: true
          allowEmptyValue: false
          schema:
            $ref: '#/components/schemas/Token'
      responses:
        200:
          description: Successful logout
        404:
          description: Session not found

  /batch/status:
    get:
      tags:
      - batch
      summary: Get the status of batches currently on the web service for a user
      operationId: GetBatchStatus
      responses:
        200:
          description: Succesful handling
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatus'
        400:
          description: User not identify able
  
  /batch/result/{fileID}:
    get:
      tags:
      - batch
      summary: Get the computed result of a batch
      operationId: FetchBatchResult
      parameters:
        - in: path
          name: fileID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Sucessful fetch of batch result
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BatchResult'
        404:
          description: Could not find batch